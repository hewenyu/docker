ARG PYTHON_VERSION=3.11
ARG CUDA_VERSION=12.9.0
FROM nvidia/cuda:${CUDA_VERSION}-devel-ubuntu22.04

# Set non-interactive installation
ENV DEBIAN_FRONTEND=noninteractive

# Install required packages
RUN apt-get update && apt-get install -y \
    git \
    wget \
    curl \
    libgl1 \
    libglib2.0-0 \
    libsm6 \
    libxrender1 \
    libxext6 \
    ffmpeg \
    build-essential \
    pkg-config \
    cmake \
    ninja-build \
    libopenblas-dev \
    liblapack-dev \
    libx11-dev \
    libgtk-3-dev \
    # OpenFST libraries for pynini
    libfst-dev \
    libfst-tools \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Install Miniconda
RUN wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O /tmp/miniconda.sh && \
    bash /tmp/miniconda.sh -b -p /opt/conda && \
    rm /tmp/miniconda.sh

# Add conda to path
ENV PATH="/opt/conda/bin:${PATH}"

# Initialize conda for shell interaction
RUN conda init bash && \
    echo "conda activate base" >> ~/.bashrc

# Create conda environment with Python version
RUN conda create -n chattts python=${PYTHON_VERSION} -y

# Set up conda environment for use in Dockerfile
ENV PATH="/opt/conda/envs/chattts/bin:${PATH}"

# Set working directory
WORKDIR /app

# Copy application files
COPY . /app/

# Upgrade pip and install requirements in the conda environment
RUN conda run -n chattts pip install --upgrade pip
RUN conda run -n chattts pip install --upgrade setuptools
# Install Cython first (required for pynini)
RUN conda run -n chattts pip install Cython
# Install OpenFST and Pynini via conda
RUN conda install -c conda-forge -n chattts openfst=1.8.2 -y
# Try installing pynini from conda-forge first
RUN conda install -c conda-forge -n chattts pynini=2.1.5 -y || echo "Failed to install pynini from conda, will try to exclude it from pip requirements"
# Install Python dependencies (with --no-deps for pynini to skip it if it fails)
RUN grep -v "pynini" requirements.txt > requirements_no_pynini.txt || cp requirements.txt requirements_no_pynini.txt
RUN conda run -n chattts pip install -r requirements_no_pynini.txt

# WEB_ADDRESS: 0.0.0.0:9966
ENV WEB_ADDRESS="0.0.0.0:9966"
#  NVIDIA_VISIBLE_DEVICES: all
ENV NVIDIA_VISIBLE_DEVICES=all

#  set hf-mirror
ENV HF_ENDPOINT=https://hf-mirror.com

# Default ports for webapp (adjust based on actual application)
EXPOSE 9966

# Set the entrypoint command to run in the conda environment
CMD ["conda", "run", "--no-capture-output", "-n", "chattts", "python", "app.py"]
