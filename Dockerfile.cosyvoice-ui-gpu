# ==================================================================
# Stage 1: Builder
# ==================================================================
FROM nvidia/cuda:12.4.1-cudnn-devel-ubuntu22.04 as builder

ARG VENV_NAME="cosyvoice"
ENV VENV=$VENV_NAME
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8

ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1
# Do not use --login here as it's not needed for non-interactive builds
SHELL ["/bin/bash", "-c"]

# Install build dependencies in a single layer
RUN apt-get update -y --fix-missing && \
    apt-get install -y --no-install-recommends \
    git \
    build-essential \
    curl \
    wget \
    ffmpeg \
    unzip \
    git-lfs \
    sox \
    libsox-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/* && \
    git lfs install

# Install Miniforge, create env, install dependencies in a single layer
RUN wget --quiet https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-Linux-x86_64.sh -O ~/miniforge.sh && \
    /bin/bash ~/miniforge.sh -b -p /opt/conda && \
    rm ~/miniforge.sh && \
    # Set up conda
    . /opt/conda/etc/profile.d/conda.sh && \
    conda config --add channels conda-forge && \
    conda config --set channel_priority strict && \
    # Create env and install packages
    conda create -y -n ${VENV} python=3.10 && \
    conda run -n ${VENV} conda install -y -c conda-forge pynini==2.1.5 && \
    # Clone repo and install python requirements
    git clone --depth 1 --recursive https://github.com/FunAudioLLM/CosyVoice.git /workspace/CosyVoice && \
    cd /workspace/CosyVoice && \
    conda run -n ${VENV} pip install --no-cache-dir -r requirements.txt -i https://mirrors.aliyun.com/pypi/simple/ --trusted-host=mirrors.aliyun.com

# ==================================================================
# Stage 2: Final Image
# ==================================================================
FROM nvidia/cuda:12.4.1-cudnn-runtime-ubuntu22.04

ARG VENV_NAME="cosyvoice"
ENV VENV=$VENV_NAME
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV DEBIAN_FRONTEND=noninteractive
ENV PYTHONUNBUFFERED=1

# Install runtime dependencies
RUN apt-get update -y --fix-missing && \
    apt-get install -y --no-install-recommends \
    sox \
    libsox-dev \
    ffmpeg && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Copy conda environment from builder
COPY --from=builder /opt/conda /opt/conda

# Copy application code from builder
COPY --from=builder /workspace/CosyVoice /workspace/CosyVoice

# Copy entrypoint script
COPY entrypoint.sh /usr/local/bin/entrypoint.sh
RUN chmod +x /usr/local/bin/entrypoint.sh

# Set up environment for conda
ENV PATH /opt/conda/envs/${VENV}/bin:/opt/conda/bin:$PATH
ENV CONDA_DEFAULT_ENV=${VENV}
ENV PYTHONPATH="${PYTHONPATH}:/workspace/CosyVoice:/workspace/CosyVoice/third_party/Matcha-TTS"

WORKDIR /workspace/CosyVoice

ENTRYPOINT ["/usr/local/bin/entrypoint.sh"]
# Default command to start a bash session in the activated environment
CMD ["bash"]